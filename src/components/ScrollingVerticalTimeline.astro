---
import { useEffect } from "astro/client";
import {getCollection, render} from "astro:content";
const years = await getCollection("years");
---

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    let stickyTop = 0,
        scrollTarget = false;

    const timeline = document.querySelector(".timeline__nav"),
        items = timeline.querySelectorAll("li"),
        milestones = document.querySelectorAll(".timeline__section .milestone"),
        offsetTop = parseInt(getComputedStyle(timeline).top, 10);

    const TIMELINE_VALUES = {
      start: 190,
      step: 30
    };

    const updateStickyTop = () => {
      timeline.classList.remove("fixed");
      stickyTop = timeline.getBoundingClientRect().top + window.scrollY - offsetTop;
      handleScroll();
    };

    const handleScroll = () => {
      if (window.scrollY > stickyTop) {
        timeline.classList.add("fixed");
      } else {
        timeline.classList.remove("fixed");
      }

      let viewLine = window.scrollY + window.innerHeight / 3;
      let active = -1;

      if (scrollTarget === false) {
        milestones.forEach((milestone, index) => {
          if (milestone.getBoundingClientRect().top + window.scrollY - viewLine > 0) {
            return;
          }
          active = index;
        });
      } else {
        active = scrollTarget;
      }

      timeline.style.top = `${-1 * active * TIMELINE_VALUES.step + TIMELINE_VALUES.start}px`;

      items.forEach((item, index) => {
        item.classList.toggle("active", index === (active !== -1 ? active : 0));
      });
    };

    const handleItemClick = (event) => {
      const li = event.currentTarget.parentElement;
      const index = Array.from(items).indexOf(li);
      const milestone = milestones[index];

      if (!li.classList.contains("active") && milestone) {
        scrollTarget = index;
        const scrollTargetTop = milestone.getBoundingClientRect().top + window.scrollY - 80;
        window.scrollTo({ top: scrollTargetTop, behavior: "smooth" });

        setTimeout(() => {
          scrollTarget = false;
        }, 400);
      }
    };

    window.addEventListener("resize", updateStickyTop);
    window.addEventListener("scroll", handleScroll);
    items.forEach(item => item.querySelector("span").addEventListener("click", handleItemClick));

    updateStickyTop();
    handleScroll();
  });
</script>

<article class="timeline">
  <nav class="timeline__nav">
    <ul>
      { years.map(year => <li><span>{year.data.title}</span></li>) }
    </ul>
  </nav>
  <section class="timeline__section">
    <div class="wrapper">
      {
        years.map(year => {
            <!--<h2 class="milestone">{year.data.subTitle}</h2>-->
            <p>{
              year.data.content?.map(item => <img src={item} />)
            }</p>
        })
      }
    </div>
  </section>
</article>

<style>
  @import url("https://fonts.googleapis.com/css?family=Exo+2:400,700&subset=cyrillic");
  html {
    box-sizing: border-box;
  }
  *, *::before, *::after {
    box-sizing: inherit;
  }
  body {
    font-family: "Exo 2", sans-serif;
    line-height: 1.5;
  }
  .wrapper {
    margin: 0 auto;
    padding: 0 16.66% 50px;
    width: 100%;
  }
  article {
    position: relative;
    max-width: 980px;
    margin: 0 auto;
  }
  .timeline__nav {
    position: fixed;
    z-index: 99;
    top: 0;
    transition: top 0.3s ease-out;
  }
  .timeline__nav ul {
    list-style: none;
    list-style-position: inside;
    margin: 15px 0;
  }
  .timeline__nav ul li {
    margin: 15px 0;
    padding-left: 0;
    list-style-type: none;
    color: #bfc1c3;
    border-bottom: 1px dotted rgba(0, 0, 0, 0.3);
    cursor: pointer;
    transition: all 0.3s ease-out;
  }
  .timeline__nav ul li.active {
    font-weight: bold;
    color: #f94125;
    border-bottom: 1px dotted transparent;
    transform: scale(1.2);
  }
  .timeline__nav ul li:hover {
    color: #000;
  }
</style>
